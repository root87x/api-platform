version: "3.4"
networks:
  home:
    external: true
volumes:
  vol:
    driver: local
services:
  api_db:
    container_name: api_db
    image: mysql
    env_file:
      - .env
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    ports:
      - "${DB_PORT}:3306"
    networks:
      - home
  api_php:
    container_name: api_php
    env_file:
      - .env
    build:
      dockerfile: Dockerfile
      context: ./
      args:
        APP_ENV: ${APP_ENV}
    restart: on-failure
    volumes:
      - ./config:/usr/src/app/config
      - ./migrations:/usr/src/app/migrations
      - ./src:/usr/src/app/src
      - ./templates:/usr/src/app/templates
      - ./public/:/usr/src/app/public:rw
      - ./composer.json:/usr/src/app/composer.json:rw
      - ./composer.lock:/usr/src/app/composer.lock:rw
      - ./symfony.lock:/usr/src/app/symfony.lock:rw
    ports:
      - "${APP_HTTP_PORT}:8081"
    depends_on:
      - api_db
    networks:
      - home
  api_cache:
    hostname: cache-proxy
    container_name: api_cache
    image: varnish:stable
    depends_on:
      - api_php
    volumes:
      - "./docker/varnish/default.vcl:/etc/varnish/default.vcl"
    ports:
      - "${VARNISH_CACHE_PORT}:80"
    tmpfs:
        - /var/lib/varnish:exec
    environment:
      - VARNISH_SIZE=${VARNISH_SIZE}
    command: "-p default_keep=300"
    networks:
      - home


